
create ALB > target group: k0s-k8s ec2 > enter the ALB url into ingress: hosts: field
----------------
https://www.nginx.com/blog/deploying-nginx-ingress-controller-on-amazon-eks-how-we-tested/
https://docs.nginx.com/nginx-ingress-controller/installation/installation-with-manifests/

kubectl create deployment nginx --image=nginx
kubectl create service nodeport nginx --tcp=80:80

refer the below links to resolve ingress
https://platform9.com/blog/ultimate-guide-to-kubernetes-ingress-controllers/
https://platform9.com/blog/building-a-complete-stack-ingress-controllers/    ##nginx ingress controller with one command
------------------------------
##Ingress example
https://aws.amazon.com/blogs/opensource/kubernetes-ingress-aws-alb-ingress-controller/

eksctl create cluster --name=shubhradeep-eks --region us-east-2
eksctl utils associate-iam-oidc-provider --cluster=shubhradeep-eks --approve --region us-east-2
kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/rbac-role.yaml

aws iam create-policy \
    --policy-name ALBIngressControllerIAMPolicy \
    --policy-document https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/iam-policy.json

# Copy Arn from output
arn:aws:iam::891190821806:policy/ALBIngressControllerIAMPolicy

eksctl create iamserviceaccount \
       --cluster=shubhradeep-eks \
       --namespace=kube-system \
       --name=alb-ingress-controller \
       --attach-policy-arn=arn:aws:iam::891190821806:policy/ALBIngressControllerIAMPolicy \
       --override-existing-serviceaccounts \
       --region=us-east-2 \
       --approve
        
curl -sS "https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/alb-ingress-controller.yaml" \
     | sed "s/# - --cluster-name=devCluster/- --cluster-name=shubhradeep-eks/g" \
     | kubectl apply -f -

kubectl logs -n kube-system $(kubectl get po -n kube-system | egrep -o alb-ingress[a-zA-Z0-9-]+)

#Deploy sample application
kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/2048/2048-namespace.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/2048/2048-deployment.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/2048/2048-service.yaml

kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.4/docs/examples/2048/2048-ingress.yaml

kubectl get ingress/2048-ingress -n 2048-game
-----------------------------------------
# for metal lb & nginx ingress on baremetal k8s cluster, refer to just me and opensource channels kube 33.1 to deply metallb, 59, 59.1 & 59.2 for k8s ingress
-----------------------------------------
https://medium.com/devops-dudes/running-the-latest-aws-load-balancer-controller-in-your-aws-eks-cluster-9d59cdc1db98

github.com/kubernetes-sigs/aws-alb-ingress-controller

Try these for deploying ingress on eks using alb ingress controller
https://blog.sivamuthukumar.com/aws-load-balancer-controller-on-eks-cluster

https://www.youtube.com/watch?v=S8U7A-eGdOs
https://github.com/RobinNagpal/kubernetes-tutorials/tree/master/06_tools/007_alb_ingress/01_eks
-------------------------------------
## Ingress: ALB Ingress Controller
# Helm Installation Steps
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
sudo apt-get install apt-transport-https --yes
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm

attach IAM Admin role to ec2 where eksctl will be installed
install kubectl, eksctl, helm, awscli (install kubectl & eksctl from aws eks documentation)
aws configure> enter access id, secret key & region

eksctl create cluster --name shubhradeep-eks --region us-east-2 --nodegroup-name shubhradeep-nodes --node-type t2.medium --managed --nodes 1 

curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.1/docs/install/iam_policy.json

aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json

eksctl utils associate-iam-oidc-provider --region=us-east-2 --cluster=shubhradeep-eks --approve

eksctl create iamserviceaccount \
  --cluster=shubhradeep-eks \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name "AmazonEKSLoadBalancerControllerRole" \
  --attach-policy-arn=arn:aws:iam::891190821806:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve

helm repo add eks https://aws.github.io/eks-charts

helm repo update

helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  -n kube-system \
  --set clusterName=shubhradeep-eks \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller 
  --set image.repository=602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-load-balancer-controller

kubectl get deployment -n kube-system aws-load-balancer-controller

create a yaml file with the below content & create the ingress, deplyment & service to launch a game app.
https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.1/docs/examples/2048/2048_full.yaml

eksctl delete cluster --region=us-east-2 --name=shubhradeep-eks
-----------------------------------------------------------


